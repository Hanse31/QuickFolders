QuickFolders Options conversion project
========================================

<label  />
==> 
<label  for="idOfElement"> </label>


<button />  
==>
<button> 


https://www.w3schools.com/howto/howto_js_tabs.asp


- label make closing tabs and replace values

30/11/2021
Completed conversion for remaining parts of options.html -
 buttons and checkbox labels, i18n, de-chrome (most) icon paths
 
 Pattern:
 <checkbox /> <label value="__myText__"/>
 =>
 <label> <input type="checkbox" >__myText__</label>
 
Next Steps: reference conversion, replace native icons. 
- Can icons from Thunderbird still be accessed by a html page? or do we need to supply copied versions...


roll out all data-pref- changes to all elements.

support or convert <radiogroup> !!!

Radiogroups wired up!


<fieldset orient="horizontal">  - changed to class=hbox.

<separator> to <span class="separator">

Support for collapsed attribute:
*[collapsed=true] {
  display: none !important;
}




Added a class for buttons with icons and tabs in order to add icons (behave like list icons):
button[isTab], button.iconButton {
  display: list-item;
  list-style-position: inside;
}

Added test config option to suppress xul options dialog (general debug mode must also be enabled):
extensions.quickfolders.debug.suppressXULoptions

support for sliding alert (accessibility for blind people)

TO DO:

- wiring up events:
#  Version number - open version history

#  Bling / Layout
   initBling( ) function.
   - Themes dropdown
   - all number inputs
   - color pickers
#  Quick Help - open homepage   
#  Support tab:
   - YouTube channel
   - bug report
   - 
#  License tab: 
   - Save Configuration / Load Configuration
   - Advanced Seach settings (opens new window)

- reuse existing options window, is this possible?

- wire up color pickers: at the moment there are no bound prefs - use a background notification for this?

- convert palette dropdowns to <option> elements  

- white fill color for selected tab.

-moz-image-region = seems to be without alternative. (see paste button for license)

Questions for Monday:
  how to use folder.createFolder to 